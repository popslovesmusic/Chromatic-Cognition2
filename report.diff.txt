<#
.SYNOPSIS
Safely apply and auto-commit a Git patch (diff) file or inline text.

.DESCRIPTION
- Checks that you're in a Git repo
- Creates a backup branch before applying
- Runs dry-run validation and 3-way fallback
- Applies the patch
- Stages and commits all resulting changes
#>

param(
    [string]$PatchFile
)

# Fail fast on errors
$ErrorActionPreference = "Stop"

# 🧩 Step 1: Verify Git repo
if (-not (git rev-parse --is-inside-work-tree 2>$null)) {
    Write-Host "❌ Error: Not inside a Git repository." -ForegroundColor Red
    exit 1
}

# 🧩 Step 2: Move to repo root
$RepoRoot = git rev-parse --show-toplevel
Set-Location $RepoRoot

# 🧩 Step 3: Create backup branch
$Timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
$BackupBranch = "pre-patch-$Timestamp"
git branch $BackupBranch | Out-Null
Write-Host ("🧷 Backup branch created: {0}" -f $BackupBranch) -ForegroundColor Cyan

# 🧩 Step 4: Read diff input (file or piped)
$TempPatch = New-TemporaryFile
if ($PatchFile -and (Test-Path $PatchFile)) {
    Get-Content -Raw $PatchFile | Out-File -Encoding utf8 $TempPatch
} else {
    $input | Out-File -Encoding utf8 $TempPatch
}

# 🧩 Step 5: Dry-run validation
Write-Host "🔍 Checking patch applicability..." -ForegroundColor Yellow
git apply --check $TempPatch 2>$null
if ($LASTEXITCODE -ne 0) {
    Write-Host "⚠️ Dry-run failed. Attempting 3-way merge..." -ForegroundColor Yellow
    git apply --3way --check $TempPatch 2>$null
    if ($LASTEXITCODE -ne 0) {
        Write-Host "❌ Patch cannot be applied cleanly, even with 3-way merge." -ForegroundColor Red
        Write-Host ("Backup branch preserved: {0}" -f $BackupBranch)
        Remove-Item $TempPatch -Force
        exit 1
    }
}

# 🧩 Step 6: Apply patch
Write-Host "✅ Applying patch..." -ForegroundColor Green
git apply --3way $TempPatch

# 🧩 Step 7: Stage and commit automatically
Write-Host "`n🧾 Staging and committing changes..." -ForegroundColor Cyan
git add -A
$CommitMsg = "Applied diff safely – $Timestamp"
git commit -m "$CommitMsg"

# 🧩 Step 8: Show summary
Write-Host ""
Write-Host "🎉 Patch applied and committed successfully!" -ForegroundColor Green
Write-Host ("🪄 Commit message: {0}" -f $CommitMsg)
Write-Host "`n📄 Git status:" -ForegroundColor Cyan
git status -s

Write-Host ""
Write-Host "To undo, you can run:" -ForegroundColor Yellow
Write-Host ("  git switch {0}" -f $BackupBranch) -ForegroundColor Yellow

# Cleanup
Remove-Item $TempPatch -Force
