 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/docs/soundlab-diagnostic-report.md b/docs/soundlab-diagnostic-report.md
new file mode 100644
index 0000000000000000000000000000000000000000..d36bc6a3ffa1e7dbd943c3d4258e38269ec0d868
--- /dev/null
+++ b/docs/soundlab-diagnostic-report.md
@@ -0,0 +1,97 @@
+# Soundlab Modular Diagnostics
+
+## 1. UI Element Audit
+### Interactive inventory
+| Element | Location | Bound handler | Notes |
+| --- | --- | --- | --- |
+| `#startBtn` | Transport controls partial | `initAudio()` click listener enables graph bootstrap and status messaging.【F:partials/transport-controls.html†L3-L60】【F:js/soundlab-events.js†L69-L75】 | Correctly disables itself after initialization and enables downstream actions.【F:js/soundlab-audio-core.js†L248-L259】 |
+| `#generateBtn` | Transport controls partial | `generateTone()` click listener starts sine source and enables stop control.【F:partials/transport-controls.html†L11-L27】【F:js/soundlab-events.js†L69-L75】【F:js/soundlab-audio-core.js†L262-L289】 | Disabled until audio engine starts, preventing orphan presses.【F:js/soundlab-audio-core.js†L248-L257】 |
+| `#stopBtn` | Transport controls partial | Composite click handler stops tone/file/Φ/image playback.【F:partials/transport-controls.html†L28-L47】【F:js/soundlab-events.js†L71-L75】 | Re-disabled after `stopAudio()`, but not after Φ auto-complete (see §3).【F:js/soundlab-audio-core.js†L338-L358】【F:js/soundlab-phi.js†L258-L285】 |
+| `#loadBtn` / `#fileInput` | Transport controls partial | Button triggers hidden file input; `change` wired to `loadAudioFile()` with audio-context guard.【F:partials/transport-controls.html†L48-L69】【F:js/soundlab-events.js†L76-L80】【F:js/soundlab-audio-core.js†L291-L336】 | Status messaging steers users back to Start Audio if context missing.【F:js/soundlab-audio-core.js†L295-L305】 |
+| `#loadImageBtn` / `#imageInput` | Transport controls partial | Loads image into canvas, reveals panel, primes status.【F:partials/transport-controls.html†L70-L99】【F:js/soundlab-events.js†L80-L84】【F:js/soundlab-image.js†L9-L62】 | Leaves Play button enabled even when audio context absent; playback simply no-ops (see §4). |
+| `#playImageBtn` | Transport controls partial | Toggles between `startImagePlayback()` and `stopImagePlayback()` with status copy.【F:partials/transport-controls.html†L88-L99】【F:js/soundlab-events.js†L83-L84】【F:js/soundlab-image.js†L64-L115】 | Button label swaps on toggle; disabled until image present.【F:js/soundlab-image.js†L46-L55】 |
+| Φ controls (`#phiMode`, `#baseFreq`, `#duration`, `#driveCurve`, `#frequencyRange`, `#runPhiBtn`, `#restoreParamsBtn`, `#diagnosticBtn`) | Φ panel partial | Mode runner reads values via `getParams()`; restore & diagnostic buttons wired to recovery/log routines.【F:partials/transport-controls.html†L101-L176】【F:js/soundlab-events.js†L84-L90】【F:js/soundlab-phi.js†L71-L337】【F:js/soundlab-utils.js†L39-L59】 | `#restoreParamsBtn` remains disabled until a Φ run captures state.【F:js/soundlab-phi.js†L266-L275】 |
+| EQ & saturation knobs (`.knob`) | EQ/saturation partials | Mouse, keyboard, and focus handlers sync UI, logs, and audio params with readiness checks.【F:partials/eq-panel.html†L4-L16】【F:partials/saturation-panel.html†L4-L16】【F:js/soundlab-events.js†L110-L238】 | Prevents edits before engine start via `isEqReady()` messaging.【F:js/soundlab-audio-core.js†L205-L214】 |
+| Image sonification controls (`#sonifyMode`, `#scanSpeed`, `#freqMin`, `#freqMax`) | Image panel partial | Slider updates live label; values consumed during playback per mode.【F:partials/image-sonification.html†L1-L36】【F:js/soundlab-events.js†L97-L101】【F:js/soundlab-image.js†L117-L330】 | Panel stays hidden until image loads, preserving layout integrity.【F:js/soundlab-image.js†L42-L55】 |
+| Logging controls (`#clearLogBtn`, `#exportLogBtn`, `#exportJsonBtn`) | Log partial | Click handlers reset log or export CSV/JSON via Blob download.【F:partials/log-and-matrix.html†L3-L33】【F:js/soundlab-events.js†L103-L105】【F:js/soundlab-logging.js†L18-L144】 | Shortcut legend auto-populates from `data-shortcut` attributes.【F:js/soundlab-logging.js†L146-L164】 |
+| Config dropdown `#configSelect` | Config loader partial | `change` handler fetches JSON, normalizes, and applies to UI/matrix.【F:partials/config-loader.html†L1-L8】【F:js/soundlab-events.js†L92-L95】【F:js/soundlab-config.js†L4-L142】 |
+| Status displays (`#status`, `#statusTip`, `#shortcutLegend`, log counters) | Transport & log partials | Updated across modules to reflect lifecycle state.【F:partials/transport-controls.html†L101-L176】【F:partials/log-and-matrix.html†L3-L33】【F:js/soundlab-audio-core.js†L248-L359】【F:js/soundlab-logging.js†L48-L164】 | Provide user feedback for readiness, diagnostics, and logging. |
+
+### Findings
+* All declared interactive elements are wired to handlers after partial loading; no orphaned IDs detected because `loadPartials()` awaits each include before binding events.【F:js/soundlab-main.js†L335-L364】【F:js/soundlab-events.js†L66-L107】
+* Shortcut legend covers every control exposing a `data-shortcut`, ensuring accessibility parity between mouse and keyboard workflows.【F:js/soundlab-logging.js†L146-L164】
+* Event registration assumes partial markup availability; if a new include fails without a fallback snippet, `document.getElementById(...).addEventListener` would throw. Consider null-guards or `querySelector` option chaining for future extensibility.【F:js/soundlab-events.js†L69-L107】【F:js/soundlab-main.js†L335-L349】
+
+## 2. Audio Graph Validation
+### Observations
+* `initAudio()` constructs a linear chain (source → EQ filters → waveshaper → gain → analyser → destination), seeds analyser buffers, and primes UI state.【F:js/soundlab-audio-core.js†L216-L260】
+* `generateTone()`/`loadAudioFile()` rebuild upstream sources while reusing the shared processing chain via `ensureProcessingChain()`.【F:js/soundlab-audio-core.js†L262-L333】
+* `stopAudio()` tears down active oscillator/buffer sources and restores transport controls, but leaves the processing chain hot for subsequent playback.【F:js/soundlab-audio-core.js†L338-L359】
+
+### Issues & recommendations
+| Severity | Issue | Evidence | Recommendation |
+| --- | --- | --- | --- |
+| **High** | Saturation mix removes the dry signal entirely: the waveshaper curve is scaled by `params.mix/100`, so the default mix of `0` silences all audio traversing the chain.【F:js/soundlab-audio-core.js†L19-L106】 | Implement a parallel dry path or compute a crossfaded output (e.g., mix = 0 routes dry signal, mix = 100 fully wet). At minimum, default mix should be 100% until blending is supported. |
+| Medium | `ensureProcessingChain()` repeatedly disconnects nodes on each call; while safe, it risks transient pops under load and omits context resume for suspended states.【F:js/soundlab-audio-core.js†L56-L92】 | Cache a flag to skip redundant disconnect/reconnect cycles and call `audioContext.resume()` inside `initAudio()` for Safari/Chrome autoplay policies. |
+| Medium | `stopAudio()` does not call `setAudioPlaying(false)`, while Φ mode uses that flag. Divergent state tracking can desynchronize shared status helpers.【F:js/soundlab-audio-core.js†L338-L359】【F:js/soundlab-phi.js†L258-L285】 | Normalize on the exported setter when toggling playback so UI components share the same state source. |
+
+## 3. Φ Mode Dispatch and Recovery
+### Observations
+* `runPhiMode()` validates the audio graph, stops prior Φ synthesis, then branches across tone/AM/FM/interval/harmonic implementations that share envelope helpers and parameter sampling from `getParams()`.【F:js/soundlab-phi.js†L71-L256】【F:js/soundlab-utils.js†L39-L59】
+* On completion, last-run parameters are cached and the restore button is enabled; `restoreLastParams()` hydrates form inputs and announces status.【F:js/soundlab-phi.js†L258-L313】
+* `diagnosticParamsLog()` prints structured details to the console and echoes a concise summary in the status banner.【F:js/soundlab-phi.js†L316-L333】
+
+### Issues & recommendations
+| Severity | Issue | Evidence | Recommendation |
+| --- | --- | --- | --- |
+| Medium | When a Φ run times out naturally, the stop button remains enabled even though synthesis is halted, inviting redundant presses.【F:js/soundlab-phi.js†L258-L285】 | Disable `#stopBtn` inside the timeout callback (and re-enable Generate) to keep transport UI truthful without relying on manual stop. |
+| Medium | Parameter recovery is session-bound only; reloading the page clears `lastParams`, reducing Φ workflow continuity.【F:js/soundlab-phi.js†L10-L44】【F:js/soundlab-phi.js†L266-L275】 | Persist the last Φ payload into `localStorage` (with timestamp) and hydrate during initialization to survive reloads. |
+| Low | `diagnosticParamsLog()` relies on the console for detail, offering no in-app history beyond transient status text.【F:js/soundlab-phi.js†L316-L333】 | Pipe diagnostic output into the existing logging panel or a dedicated diagnostics feed for traceability. |
+
+## 4. Image Sonification Workflow
+### Observations
+* Image loading scales artwork to ≤512 px, reveals the sonification panel, and populates metadata before asserting audio readiness.【F:js/soundlab-image.js†L9-L58】
+* Playback toggles update button text and status messaging while dispatching to spectral, harmonic, FM, or additive renderers that interpret pixel data differently.【F:js/soundlab-image.js†L64-L330】
+* Each renderer advances a column counter, calls `drawScanIndicator()`, and halts automatically at image bounds.【F:js/soundlab-image.js†L152-L343】
+
+### Issues & recommendations
+| Severity | Issue | Evidence | Recommendation |
+| --- | --- | --- | --- |
+| Medium | Loading an image before the audio engine is started leaves `#playImageBtn` enabled, yet subsequent playback simply returns without user feedback when `audioContext` is null.【F:js/soundlab-image.js†L46-L75】 | Either defer enabling Play until `getAudioContext()` succeeds or display a status prompt when `startImagePlayback()` aborts due to a missing context. |
+| Medium | FM mode allocates a persistent `GainNode` (`modGain`) that is never stored in `imageOscillators`, so `stopImagePlayback()` cannot disconnect it explicitly.【F:js/soundlab-image.js†L222-L277】 | Track auxiliary nodes alongside oscillators or add a dedicated cleanup routine to prevent stray graph attachments during repeated toggles. |
+| Medium | Harmonic and additive modes spawn numerous short-lived oscillators without tracking references, so stopping playback midway cannot immediately halt grains in flight.【F:js/soundlab-image.js†L187-L330】 | Maintain a pool of active grains (oscillators & gains) to allow forced teardown when the user presses Stop. |
+| Low | `freqMin`/`freqMax` inputs accept any numeric values without validation, which can lead to silent or aliasing-prone spectra.【F:js/soundlab-image.js†L122-L330】 | Clamp ranges inside playback routines and surface validation errors near the form fields. |
+
+## 5. Logging and Export Hooks
+### Observations
+* Parameter deltas, derived “force/work,” and running totals populate both the DOM log and downloadable CSV/JSON exports.【F:js/soundlab-logging.js†L18-L144】
+* Clearing the log resets counters and redraws the placeholder; shortcut legend generation keeps keyboard hints in sync with UI changes.【F:js/soundlab-logging.js†L92-L164】
+
+### Issues & recommendations
+| Severity | Issue | Evidence | Recommendation |
+| --- | --- | --- | --- |
+| Medium | Only knob interactions trigger logging; Φ mode actions, image scans, and transport events leave no audit trail.【F:js/soundlab-events.js†L110-L287】【F:js/soundlab-phi.js†L71-L333】【F:js/soundlab-image.js†L64-L330】 | Extend `logParameterChange()` usage (or introduce event-level logging) for Φ dispatch, image playback toggles, and transport state changes to achieve complete workflow coverage. |
+| Low | CSV/JSON exports assume synchronous Blob support and do not report success/failure in the UI.【F:js/soundlab-logging.js†L99-L144】 | Update status text on export completion (or failure) so users receive inline confirmation without relying on browser download UI. |
+
+## 6. Modularization Integrity Check
+### Observations
+* `loadPartials()` fetches each include sequentially, falling back to baked-in HTML snippets when a request fails, guaranteeing required IDs exist before handler registration.【F:js/soundlab-main.js†L5-L369】
+* Initialization order—partials, matrix seed, logging, then events—keeps dependencies satisfied (matrix grid exists before `updateMatrix()`, log elements exist before `initLogging()`, etc.).【F:js/soundlab-main.js†L352-L364】
+* Audio state is centralized in `soundlab-audio-core.js`, and shared getters ensure other modules read from the same context instance.【F:js/soundlab-audio-core.js†L32-L55】
+
+### Issues & recommendations
+| Severity | Issue | Evidence | Recommendation |
+| --- | --- | --- | --- |
+| Medium | Sequential partial loading can delay first paint and input readiness if any include stalls.【F:js/soundlab-main.js†L352-L356】 | Load partials in parallel (`Promise.all`) while preserving post-load initialization sequencing to reduce perceived startup latency. |
+| Low | Event binding assumes fallback HTML parity; if a future partial omits an ID, initialization will throw and halt setup.【F:js/soundlab-events.js†L69-L107】 | Wrap each `getElementById` call with optional chaining or guard clauses to improve resilience during iterative modular refactors. |
+
+## 7. Summary Report
+| Area | Issues Found | Severity | Impact | Suggested Fixes | Missing Tests | Confidence |
+| --- | --- | --- | --- | --- | --- | --- |
+| Audio core | Dry/wet mix bug; redundant reconnects; inconsistent playback state flag | High / Medium | Silence by default, potential pops, state drift | Introduce proper mix bus; memoize connections; standardize `setAudioPlaying` usage | No automated Web Audio regression suite | Medium |
+| Φ mode | Stop button state drift; session-only recovery; diagnostic visibility | Medium / Low | Confusing transport UI; lost presets across reloads; limited traceability | Disable stop post-timeout; persist last params; surface diagnostics in UI | No preset dispatch tests | Medium |
+| Image sonification | Audio-context gating; FM cleanup gap; granular teardown; input validation | Medium / Low | User confusion, lingering nodes, noisy stoppage, invalid spectra | Gate Play button via context; track auxiliary nodes; maintain grain pool; clamp frequency inputs | No mode-by-mode playback tests | Low |
+| Logging | Coverage gaps; export feedback | Medium / Low | Incomplete audit trail; unclear export results | Log Φ/image/transport actions; update status after exports | No log export unit tests | Medium |
+| Modularization | Sequential include loading; rigid binding assumptions | Medium / Low | Slower initial render; brittle future changes | Parallelize fetches; add binding guards | No integration smoke tests | Medium |
+
+**Overall:** The system is structurally sound, but the high-severity saturation mix defect and several medium-level lifecycle gaps merit prioritization. Confidence is medium because review relied on static analysis; targeted runtime tests (especially across browsers for Web Audio) are still required.
 
EOF
)